"use strict"; function _instanceof(t, e) { return null != e && "undefined" != typeof Symbol && e[Symbol.hasInstance] ? !!e[Symbol.hasInstance](t) : t instanceof e } function _classCallCheck(t, e) { if (!_instanceof(t, e)) throw new TypeError("Cannot call a class as a function") } function _defineProperties(t, e) { for (var n = 0; n < e.length; n++) { var o = e[n]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o) } } function _createClass(t, e, n) { return e && _defineProperties(t.prototype, e), n && _defineProperties(t, n), t } var holder = document.getElementById("btn-holder"), notif = document.getElementById("notification"), show = !1, Attach = function () { function t(e, n, o) { _classCallCheck(this, t), this.show = !1, this.holder = document.querySelector(e), this.content = document.querySelector(n), this.options = o, this.attachRemove(), this.attachListener() } return _createClass(t, [{ key: "attachRemove", value: function () { var t = this; window.addEventListener("click", function () { t.hideContent() }) } }, { key: "attachListener", value: function () { var t = this; window.addEventListener("resize", function () { setTimeout(function () { return t.currentWindowSize() }, 100) }) } }, { key: "currentWindowSize", value: function () { this.setContentPos() } }, { key: "autoContent", value: function () { this.show = !this.show, this.setContentPos() } }, { key: "hideContent", value: function () { this.show && (this.show = !1, this.setContentPos()) } }, { key: "showContent", value: function () { this.show = !0, this.setContentPos() } }, { key: "setContentPos", value: function () { var t = this.holder.getBoundingClientRect(), e = this.content.getBoundingClientRect(); console.log("hello world"), this.content.setAttribute("style", "visibility: ".concat(this.show ? "visible" : "hidden", " !important; opacity: ").concat(this.show ? 1 : 0, " !important; top: ").concat(Math.floor(t.y + t.height), "px !important; left: ").concat(Math.floor(t.right - e.width), "px !important; ")) } }, { key: "destroy", value: function () { window.removeEventListener("resize") } }]), t }(), attach = new Attach("#btn-holder", "#notification"); document.getElementById("btn-holder").addEventListener("click", function (t) { attach.autoContent(), t.stopPropagation() });